version: '3'

services:
  db:
    build: ./db
    restart: always
    volumes:
      - db:/var/lib/mysql
    env_file:
      - db.env
    networks:
      - net_db

  redis:
    image: redis
    restart: always
    networks:
      - net_redis

  app:  
    build: ./app
    restart: always
    volumes:
      - nextcloud_core:/var/www/html
      - nextcloud_data:/var/www/html/data
      # - nextcloud_custom:/var/www/html/custom_apps
      # - nextcloud_config:/var/www/html/config
    environment:
      - MYSQL_HOST=db
    env_file:
      - db.env
    networks:
      - net_app
      - net_db
      - net_redis
      - net_clamav
      - net_minio

  web:
    build: ./web
    restart: always
    ports:
      - 8080:80
      - 8443:443
    volumes:
        - nextcloud_core:/var/www/html
        - nextcloud_data:/var/www/html/data
      # - nextcloud_custom:/var/www/html/custom_apps:ro
      # - nextcloud_config:/var/www/html/config:ro
    networks:
      - net_app

  cron:
    build: ./app
    restart: always
    volumes:
        - nextcloud_core:/var/www/html
        - nextcloud_data:/var/www/html/data
      # - nextcloud_custom:/var/www/html/custom_apps
      # - nextcloud_config:/var/www/html/config
    entrypoint: /cron.sh
    # networks:
    #   - net_db
    #   - net_redis
  
  clamav:
    image: dinkel/clamavd
    restart: always
    networks:
        - net_clamav
  
  minio:
    image: minio/minio
    restart: always
    volumes:
        - minio01:/data01
        - minio02:/data02
        - minio03:/data03
    env_file:
        - minio.env
    command: server "/data01, /data02, /data03"
    # ports:
    #   - 9000:9000
    networks:
        - net_minio


volumes:
  db:
  nextcloud_core:
  nextcloud_data:
  minio01:
  minio02:
  minio03:
  # nextcloud_custom:
  # nextcloud_config:

networks:
  net_app:
  net_db:
  net_redis:
  net_clamav:
  net_minio:
